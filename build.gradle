import org.gradle.api.publish.maven.MavenPublication
import org.gradle.api.tasks.compile.JavaCompile

/* Stockfish Java's build.gradle */

plugins {
    id 'application'
    id 'idea'
    id 'java'
    id 'maven-publish'
}

group 'Niflheim'
version = new Version(major: 3, minor: 0, revision: 0, build: 0)
mainClassName = 'xyz.niflheim.stockfish.StockfishTester'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def client_version = version.toString()
def stockfish_version = "10"

repositories {
    jcenter()
    mavenCentral()
}
repositories {
    mavenCentral()
}

class Version {
    String major, minor, revision, build

    String toString() {
        "${major}.${minor}.${revision}_${build}"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'log4j:log4j:1.2.17'
    implementation 'commons-logging:commons-logging:1.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

jar {
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Main-Class': 'xyz.niflheim.stockfish.StockfishTester'
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/senyast4745/Stockfish-Java")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
